// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package eggroll

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

type CompletionStatus string

const (
	CompletionStatusUnprocessed                CompletionStatus = "UNPROCESSED"
	CompletionStatusAccepted                   CompletionStatus = "ACCEPTED"
	CompletionStatusRejected                   CompletionStatus = "REJECTED"
	CompletionStatusException                  CompletionStatus = "EXCEPTION"
	CompletionStatusMachineHalted              CompletionStatus = "MACHINE_HALTED"
	CompletionStatusCycleLimitExceeded         CompletionStatus = "CYCLE_LIMIT_EXCEEDED"
	CompletionStatusTimeLimitExceeded          CompletionStatus = "TIME_LIMIT_EXCEEDED"
	CompletionStatusPayloadLengthLimitExceeded CompletionStatus = "PAYLOAD_LENGTH_LIMIT_EXCEEDED"
)

// __getInputInput is used internally by genqlient
type __getInputInput struct {
	InputIndex int `json:"inputIndex"`
}

// GetInputIndex returns __getInputInput.InputIndex, and is useful for accessing the field via an interface.
func (v *__getInputInput) GetInputIndex() int { return v.InputIndex }

// getInputInput includes the requested fields of the GraphQL type Input.
// The GraphQL type's documentation follows.
//
// Request submitted to the application to advance its state
type getInputInput struct {
	// Input index starting from genesis
	Index int `json:"index"`
	// Status of the input
	Status CompletionStatus `json:"status"`
	// Number of the base layer block in which the input was recorded
	BlockNumber string `json:"blockNumber"`
}

// GetIndex returns getInputInput.Index, and is useful for accessing the field via an interface.
func (v *getInputInput) GetIndex() int { return v.Index }

// GetStatus returns getInputInput.Status, and is useful for accessing the field via an interface.
func (v *getInputInput) GetStatus() CompletionStatus { return v.Status }

// GetBlockNumber returns getInputInput.BlockNumber, and is useful for accessing the field via an interface.
func (v *getInputInput) GetBlockNumber() string { return v.BlockNumber }

// getInputResponse is returned by getInput on success.
type getInputResponse struct {
	// Get input based on its identifier
	Input getInputInput `json:"input"`
}

// GetInput returns getInputResponse.Input, and is useful for accessing the field via an interface.
func (v *getInputResponse) GetInput() getInputInput { return v.Input }

// The query or mutation executed by getInput.
const getInput_Operation = `
query getInput ($inputIndex: Int!) {
	input(index: $inputIndex) {
		index
		status
		blockNumber
	}
}
`

func getInput(
	ctx context.Context,
	client graphql.Client,
	inputIndex int,
) (*getInputResponse, error) {
	req := &graphql.Request{
		OpName: "getInput",
		Query:  getInput_Operation,
		Variables: &__getInputInput{
			InputIndex: inputIndex,
		},
	}
	var err error

	var data getInputResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
